#!/sbin/runscript
# Copyright 1999-2007 Gentoo Foundation
# Copyright 2007 Roy Marples
# All rights reserved

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

description="Sets a font for the consoles."

depend() {
	need localmount
	need keymaps    # sets up terminal encoding scheme
	after hotplug
}

start() {
	# Forget about any font until we are successful
	rm -rf "${RC_LIBDIR}"/console

	case "${RC_SYS}" in
		UML|VPS|XEN) return 0;;
	esac

	ttyn=${rc_tty_number:-${RC_TTY_NUMBER:-12}}
	consolefont=${consolefont:-${CONSOLEFONT}}
	unicodemap=${unicodemap:-${UNICODEMAP}}
	consoletranslation=${consoletranslation:-${CONSOLETRANSLATION}}

	if [ -z "${consolefont}" ]; then
		ebegin "Using the default console font"
		eend 0
		return 0
	fi

	if [ "${ttyn}" = 0 ]; then
		ebegin "Skipping font setup (rc_tty_number == 0); you should disable this init.d"
		eend 0
		return 0
	fi

	local x= param= sf_param= retval=1

	# Get additional parameters
	if [ -n "${consoletranslation}" ]; then
		param="${param} -m ${consoletranslation}"
	fi
	if [ -n "${unicodemap}" ]; then
		param="${param} -u ${unicodemap}"
	fi

	# Set the console font
	local errmsg=
	ebegin "Setting user font"
	if [ -x /bin/setfont ]; then
		# We patched setfont to have --tty support ...
		if [ -n "$(setfont --help 2>&1 | grep -e '--tty')" ] || \
			[ -n "$(setfont --help 2>&1 | grep -e '-C')" ]
		then
			if [ -n "$(setfont --help 2>&1 | grep -e '--tty')" ]; then
				sf_param="--tty="
			else
				sf_param="-C "
			fi
			local ttydev=
			[ -d /dev/vc ] \
				&& ttydev=/dev/vc/ \
				|| ttydev=/dev/tty

			x=1
			while [ ${x} -le ${ttyn} ]; do
				/bin/setfont ${consolefont} ${param} \
					${sf_param}/${ttydev}${x} > /dev/null
				retval=$?
				x=$((${x} + 1))
			done
		else
			/bin/setfont ${consolefont} ${param} > /dev/null
			retval=$?
		fi
		errmsg="Failed to set user font"
	else
		retval=1
		errmsg="/bin/setfont not found"
	fi
	eend ${retval} "${errmsg}"

	# Store the last font so we can use it ASAP on boot
	if [ ${retval} -eq 0 -a -w "${RC_LIBDIR}" ]; then
		mkdir -p "${RC_LIBDIR}"/console

		for font in /usr/share/consolefonts/"${consolefont}".*; do :; done
		cp "${font}" "${RC_LIBDIR}"/console
		echo "$(basename "${font}")" > "${RC_LIBDIR}"/console/font
		if yesno ${unicode:-${UNICODE}}; then
			printf "" > "${RC_LIBDIR}"/console/unicode
		else
			rm -f "${RC_LIBDIR}"/console/unicode
		fi
	fi

	return ${retval}
}

# vim: set ts=4 :
