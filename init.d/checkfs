#!/sbin/runscript
# Copyright 1999-2007 Gentoo Foundation
# Copyright 2007 Roy Marples
# All rights reserved

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

description="Check filesystems according to /etc/fstab for errors and \
optionally repair them."

depend() {
	need checkroot
	after modules
	keywords notimeout
}

do_checkfs() {
	local retval=0 mode="-p" opts= parts=

	ebegin "Checking all filesystems"
	
	if  [ -e /forcefsck ] || get_bootparam "forcefsck"; then
		ewarn "A full fsck has been forced"
		mode="-f -n"
	fi

	if [ "${RC_UNAME}" = "Linux" ]; then
		opts="-A -C0 -R -T"
	else
		parts="$(fstabinfo --passno ">1")"
		[ -z "${parts}" ] && return 0
	fi

	fsck ${opts} ${mode} ${parts}
	retval=$?
	
	if [ ${retval} -eq 0 ]; then
		eend 0
	elif [ ${retval} -eq 1 ]; then
		ewend 1 "Filesystem errors corrected."
		retval=0
	elif [ ${retval} -eq 2 ]; then
		ewend 1 "System should be rebooted"
	elif [ ${retval} -eq 8 ]; then
		ewend 1 "Operational error, continuing"
		retval=0
	else
		if yesno ${rc_force_auto:-${RC_FORCE_AUTO}}; then
			eend 2 "Fsck could not correct all errors, rerunning"
			fsck ${opts} -y ${parts}
			retval=$?
			eend ${retval}
		fi

		if [ ${retval} -gt 3 ]; then
			eend 2 "Fsck could not correct all errors, manual repair needed"
			exec rc-abort || exit 1
		fi
	fi

	[ ${retval} = 0 -a -e /forcefsck ] && rm /forcefsck

	return ${retval}
}

start() {
	do_checkfs
}

stop() {
	# fsck on shutdown if we need to
	if yesno "${fsck_shutdown:-${FSCK_SHUTDOWN}}"; then
		[ ! -f /forcefsck ] && do_checkfs
	fi
	return 0
}

# vim: set ts=4 :
